---
const { job_id } = Astro.props;
---

<div class="job-application-container">
    <h1>Job Application {job_id}</h1>
    
    <form class="application-form">
        <section class="form-section">
            <h2>Personal Information</h2>
            <div class="form-grid">
                <div class="form-group">
                    <label for="firstName">First Name</label>
                    <input type="text" id="firstName" name="firstName" required>
                </div>
                <div class="form-group">
                    <label for="lastName">Last Name</label>
                    <input type="text" id="lastName" name="lastName" required>
                </div>
            </div>
            <div class="form-group">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
        </section>

        <section class="form-section">
            <h2>Documents</h2>
            <div class="form-group">
                <label for="resume" class="file-label">
                    <div class="file-input-container">
                        <span class="file-button">Choose File</span>
                        <span class="file-name">No file chosen</span>
                    </div>
                    <input type="file" id="resume" name="resume" accept=".pdf,.doc,.docx">
                </label>
                <span class="file-help-text">Upload your resume (PDF, DOC, DOCX)</span>
            </div>
        </section>

        <div class="form-actions">
            <button type="submit" class="submit-button">Submit Application</button>
        </div>
    </form>
</div>

<style>
    .job-application-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }

    h1 {
        color: #2d3748;
        font-size: 2.25rem;
        margin-bottom: 2rem;
        font-weight: 700;
    }

    h2 {
        color: #4a5568;
        font-size: 1.25rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        border-bottom: 2px solid #e2e8f0;
        padding-bottom: 0.5rem;
    }

    .form-section {
        margin-bottom: 2.5rem;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    label {
        display: block;
        margin-bottom: 0.5rem;
        color: #4a5568;
        font-weight: 500;
    }

    input, select, textarea {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #cbd5e0;
        border-radius: 0.375rem;
        background-color: #fff;
        color: #2d3748;
        font-size: 1rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    input:focus, select:focus, textarea:focus {
        border-color: #3182ce;
        box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.25);
        outline: none;
    }

    select {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%234a5568' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 1em;
        padding-right: 2.5rem;
    }

    .file-label {
        cursor: pointer;
    }

    input[type="file"] {
        display: none;
    }

    .file-input-container {
        display: flex;
        align-items: center;
        border: 1px solid #cbd5e0;
        border-radius: 0.375rem;
        overflow: hidden;
    }

    .file-button {
        background-color: #edf2f7;
        color: #4a5568;
        padding: 0.75rem 1rem;
        font-weight: 500;
        white-space: nowrap;
    }

    .file-name {
        padding: 0.75rem 1rem;
        color: #718096;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        flex-grow: 1;
    }

    .file-help-text {
        display: block;
        font-size: 0.875rem;
        color: #718096;
        margin-top: 0.5rem;
    }

    .form-actions {
        margin-top: 2.5rem;
    }

    .submit-button {
        display: inline-block;
        background-color: #4299e1;
        color: white;
        font-weight: 500;
        padding: 0.75rem 1.5rem;
        border-radius: 0.375rem;
        border: none;
        cursor: pointer;
        transition: background-color 0.15s ease-in-out;
        font-size: 1rem;
    }

    .submit-button:hover {
        background-color: #3182ce;
    }

    @media (max-width: 640px) {
        .form-grid {
            grid-template-columns: 1fr;
            gap: 0;
        }
        
        .job-application-container {
            padding: 1rem;
        }
    }
</style>

<script>
    // Add client-side file input handling
    document.addEventListener('DOMContentLoaded', () => {
        const fileInput = document.getElementById('resume');
        const fileName = document.querySelector('.file-name');
        
        if (fileInput && fileName) {
            fileInput.addEventListener('change', (event) => {
                try {
                    const file = event?.target?.files[0];
                    fileName.textContent = file ? file.name : 'No file chosen';
                } catch (error) {
                    console.error('Error reading file:', error);
                }
            });
        }
    });
</script>a</div>